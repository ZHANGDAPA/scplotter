% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/base_single_plots.R
\name{BarPlotBaseSingle}
\alias{BarPlotBaseSingle}
\alias{PieChartBaseSingle}
\alias{LinePlotBaseSingle}
\title{Plot with a single value per group.}
\usage{
BarPlotBaseSingle(
  data,
  x,
  y,
  theme = "theme_scp",
  theme_args = list(),
  palette = "Paired",
  palcolor = NULL,
  alpha = 1,
  x_text_angle = 0,
  aspect.ratio = 1,
  legend.position = "right",
  legend.direction = "vertical",
  title = NULL,
  subtitle = NULL,
  xlab = NULL,
  ylab = NULL,
  keep_empty = FALSE,
  expand_x = 0,
  expand_y = 0,
  fill_by_x = TRUE,
  ...
)

PieChartBaseSingle(
  data,
  x,
  y,
  label = "y",
  theme = "theme_scp",
  theme_args = list(),
  palette = "Paired",
  palcolor = NULL,
  alpha = 1,
  aspect.ratio = 1,
  legend.position = "right",
  legend.direction = "vertical",
  title = NULL,
  subtitle = NULL,
  xlab = NULL,
  ylab = NULL,
  keep_empty = FALSE,
  ...
)

LinePlotBaseSingle(
  data,
  x,
  y,
  fill_point_by_x = TRUE,
  color_line_by_x = TRUE,
  add_bg = FALSE,
  bg_palette = "Paired",
  bg_palcolor = NULL,
  bg_alpha = 0.2,
  add_errorbars = FALSE,
  errorbar_width = 0.1,
  errorbar_alpha = 1,
  errorbar_color = "grey30",
  errorbar_linewidth = 0.75,
  errorbar_min = NULL,
  errorbar_max = NULL,
  errorbar_sd = NULL,
  point_alpha = 1,
  point_size = 5,
  line_type = "solid",
  line_width = 1,
  line_alpha = 0.8,
  theme = "theme_scp",
  theme_args = list(),
  palette = "Paired",
  palcolor = NULL,
  x_text_angle = 0,
  aspect.ratio = 1,
  legend.position = "right",
  legend.direction = "vertical",
  title = NULL,
  subtitle = NULL,
  xlab = NULL,
  ylab = NULL,
  keep_empty = FALSE,
  ...
)
}
\arguments{
\item{data}{A data frame.}

\item{x}{A character string specifying the column name of the data frame to plot for the x-axis.}

\item{y}{A character string specifying the column name of the data frame to plot for the y-axis.}

\item{theme}{A character string or a theme class (i.e. ggplot2::theme_classic) specifying the theme to use.
Default is "theme_scp".}

\item{theme_args}{A list of arguments to pass to the theme function.}

\item{palette}{A character string specifying the palette to use.}

\item{palcolor}{A character string specifying the color to use in the palette.}

\item{alpha}{A numeric value specifying the transparency of the plot.}

\item{x_text_angle}{A numeric value specifying the angle of the x-axis text.}

\item{aspect.ratio}{A numeric value specifying the aspect ratio of the plot.}

\item{legend.position}{A character string specifying the position of the legend.}

\item{legend.direction}{A character string specifying the direction of the legend.}

\item{title}{A character string specifying the title of the plot.}

\item{subtitle}{A character string specifying the subtitle of the plot.}

\item{xlab}{A character string specifying the x-axis label.}

\item{ylab}{A character string specifying the y-axis label.}

\item{keep_empty}{A logical value indicating whether to keep empty groups.
If FALSE, empty groups will be removed.}

\item{fill_by_x}{A logical value indicating whether to fill the bars by the x-axis values.
If FALSE, the bars will be filled a single color (the first color in the palette).}

\item{...}{Additional arguments.}

\item{label}{Which column to use as the label. NULL means no label.}

\item{fill_point_by_x}{A logical value indicating whether to color the points by the x-axis values.
If FALSE, the lines will be colored a single color (the first color in the palette).}

\item{color_line_by_x}{A logical value indicating whether to color the lines by the x-axis values.
If FALSE, the lines will be colored a single color (the first color in the palette).}

\item{add_bg}{A logical value indicating whether to add a background to the plot.}

\item{bg_palette}{The palette to use for the background.}

\item{bg_palcolor}{The color to use for the background.}

\item{bg_alpha}{The alpha value of the background.}

\item{add_errorbars}{A logical value indicating whether to add error bars to the plot.}

\item{errorbar_width}{The width of the error bars.}

\item{errorbar_alpha}{The alpha value of the error bars.}

\item{errorbar_color}{The color to use for the error bars.
If "line", the error bars will be colored the same as the lines.}

\item{errorbar_linewidth}{The line width of the error bars.}

\item{errorbar_min}{The column in the data frame containing the lower bound of the error bars.}

\item{errorbar_max}{The column in the data frame containing the upper bound of the error bars.}

\item{errorbar_sd}{The column in the data frame containing the standard deviation of the error bars.
If errorbar_min and errorbar_max are not provided, this column will be used to calculate the error bars.
errorbar_min = y - errorbar_sd, errorbar_max = y + errorbar_sd.
If errorbar_min and errorbar_max are provided, this column will be ignored.}

\item{point_alpha}{The alpha value of the points.}

\item{point_size}{The size of the points.}

\item{line_type}{The type of line to draw.}

\item{line_width}{The width of the line.}

\item{line_alpha}{The alpha value of the line.}
}
\value{
A ggplot object.
}
\description{
These functions create plots with a single value per group.
BarPlotBaseSingle: Bar plot.
PieChartBaseSingle: Pie chart.
LinePlotBaseSingle: Line plot.
}
\examples{
data <- data.frame(
   x = c("A", "B", "C", "D"),
   y = c(10, 8, 16, 4)
)
BarPlotBaseSingle(data, x = "x", y = "y")
BarPlotBaseSingle(data, x = "x", y = "y", fill_by_x = F)
data <- data.frame(
   x = c("A", "B", "C", "D"),
   y = c(10, 8, 16, 4)
)
PieChartBaseSingle(data, x = "x", y = "y")
PieChartBaseSingle(data, x = "x", y = "y", label = NULL)
data <- data.frame(
   x = c("A", "B", "C", "D"),
   y = c(10, 8, 16, 4)
)
LinePlotBaseSingle(data, x = "x", y = "y")
LinePlotBaseSingle(data, x = "x", y = "y", fill_point_by_x = FALSE)
LinePlotBaseSingle(data, x = "x", y = "y", add_bg = TRUE)

data$sd <- c(1, 2, 3, 4)
LinePlotBaseSingle(data, x = "x", y = "y", add_errorbars = TRUE, errorbar_sd = "sd")
}
